import yfinance as yf
from fastapi import FastAPI
from pydantic import BaseModel
import time
from datetime import datetime

# Initialisation du serveur FastAPI
app = FastAPI()

# Variables globales pour gérer le cache
cache = {
    "last_updated": None,
    "data": None
}

# Fonction pour obtenir le prix d'un ETF
def get_price(ticker):
    stock = yf.Ticker(ticker)
    hist = stock.history(period="1d")
    return hist["Close"].iloc[-1]

# Endpoint pour récupérer les informations
@app.get("/price/{ticker}")
def read_price(ticker: str):
    current_time = datetime.now()

    # Vérifier si le cache est à jour (toutes les 5 minutes)
    if cache["last_updated"] is None or (current_time - cache["last_updated"]).total_seconds() > 300:
        price = get_price(ticker)
        cache["data"] = price
        cache["last_updated"] = current_time
    
    return {"ticker": ticker, "price": cache["data"], "last_updated": cache["last_updated"].isoformat()}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
